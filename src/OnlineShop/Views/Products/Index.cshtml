@using OnlineShop.Models.Components
@using OnlineShop.Models.Product
@using OnlineShop.ViewComponents
@model IndexModel

@{
    ViewData["Title"] = "Home Page";
    var pages = Model.Page.Total / Model.Page.Items.Count();
}

<div class="d-flex gap-2">
<nav class="d-flex flex-column p-2 gap-4" style="min-width: 250px;">
    <div>
        <h5>Categories</h5>
        <div class="list-group">
        @if (Model.Selected == null)
        {
        <strong class="list-group-item list-group-item-action active">All Products</strong>
        }
        else
        {
        <a class="list-group-item list-group-item-action"
            asp-route-categoryLabel="@null"
            asp-route-min="@Model.MinMax.Start"
            asp-route-max="@Model.MinMax.End"
        >All Products</a>
        }
        @foreach (var item in Model.Categories)
        {
            @if (item.Label == Model.Selected)
            {
            <strong class="list-group-item list-group-item-action active">@item.Label</strong>
            }
            else
            {
            <a class="list-group-item list-group-item-action"
                asp-route-categoryLabel="@item.Label"
                asp-route-min="@Model.MinMax.Start"
                asp-route-max="@Model.MinMax.End"
            >@item.Label</a>
            }
        }
        </div>
    </div>

    <form>
        <h5>Price</h5>
        <div>
            <label for="min-range" class="form-label" id="min-range-label">Min (@Model.MinMax.Start)</label>
            <input type="range" class="form-range" id="min-range" min="0" max="10000" value="@Model.MinMax.Start"
                name="min"
                oninput="updateMin(this.value)">
        </div>
        <div>
            <label for="max-range" class="form-label" id="max-range-label">Max (@Model.MinMax.End)</label>
            <input type="range" class="form-range" id="max-range" min="0" max="10000" value="@Model.MinMax.End"
                name="max"
                oninput="updateMax(this.value)">
        </div>
        <input type="hidden" value="@Model.Selected" name="categoryLabel" />
        <button type="submit" class="btn btn-link">Apply</button>
    </form>
</nav>

<div class="flex-grow-1 p-2">
    <h2>@(Model.Selected ?? "All Products")</h2>
    @await Component.InvokeAsync(ProductsViewComponent.Name, Model.Page.Items)

    @await Component.InvokeAsync(PaginationViewComponent.Name,
        new PaginationModel(Model.Page.Items.Count(), Model.PageNumber, Model.Page.Total))
</div>
</div>

<script>
    function updateMin(value) {
        document.querySelector("#min-range-label").textContent = `Min (${value})`;
    }

    function updateMax(value) {
        document.querySelector("#max-range-label").textContent = `Max (${value})`;
    }
</script>
